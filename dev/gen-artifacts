#!/bin/bash
set -euo pipefail

#
# Available environment variables
#
# BUILD_TAG: The tag of the build. If not provided,
# the tag will be the git tag of the current commit.
#

script_dir=$(dirname "$(realpath "$0")")
repo_root=$(realpath "${script_dir}/../")
cd "${repo_root}"

export source_dir="src"
export artifacts_dir="artifacts"
export deployments_dir="deployments"
export abi_dir="${artifacts_dir}/abi"
export environments_dir="${artifacts_dir}/environments"
export build_info_file="${artifacts_dir}/build-info.json"

mkdir -p "${artifacts_dir}" "${abi_dir}" "${environments_dir}"

forge --version

export forge_version=$(forge --version | grep "Version" | grep -Eo '[0-9]+\.[0-9]+\.[0-9]+' | head -n1)

function generate_artifacts() {
    local chain="$1"
    local filename="$2"
    local package="$(echo "${filename}" | tr '[:upper:]' '[:lower:]')"
    local source_artifact="${source_dir}/${chain}/${filename}.sol"
    local abi_artifact="${abi_dir}/${filename}.abi.json"

    rm -f "${abi_artifact}"

    # Generate ABI
    if ! forge inspect "${source_artifact}:${filename}" abi --json > "${abi_artifact}"; then
        echo "ERROR: Failed to generate ABI for ${filename}" >&2
        exit 1
    fi
}

function build_info() {
    echo "⧖ Dumping build info to ${build_info_file}"
    local build_date=$(date -u +%Y-%m-%dT%H:%M:%SZ)
    local build_tag=$(git describe HEAD --tags --long)

    jq -n \
      --arg forge_version "$forge_version" \
      --arg build_date "$build_date" \
      --arg build_tag "${BUILD_TAG:-${build_tag}}" \
      '{
        forge_version: $forge_version,
        build_date: $build_date,
        build_tag: $build_tag
      }' > "${build_info_file}"
}

function environments() {
    ./dev/gen-anvil-state

    cp "${repo_root}/environments/anvil.json" "${environments_dir}/anvil.json"

    rm -rf "${repo_root}/anvil-state.json"
}

function main() {
    echo "Generating artifacts with forge version ${forge_version}"

    contracts=("GroupMessageBroadcaster" "IdentityUpdateBroadcaster")
    for contract in "${contracts[@]}"; do
        echo "⧖ Generating artifacts for contract: ${contract}"
        generate_artifacts "app-chain" "${contract}"
    done

    contracts=("NodeRegistry" "RateRegistry" "PayerRegistry" "PayerReportManager" "SettlementChainParameterRegistry")
    for contract in "${contracts[@]}"; do
        echo "⧖ Generating artifacts for contract: ${contract}"
        generate_artifacts "settlement-chain" "${contract}"
    done

    build_info
    environments

    echo -e "\033[32m✔\033[0m Artifacts generated successfully!\n"
}

if [ "${forge_version}" != "1.1.0" ]; then
    echo "ERROR: Forge version must be 1.1.0. Got '${forge_version}'" >&2
    exit 1
fi

main "$@"
