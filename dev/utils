#!/bin/bash

# Load environment variables from .env file if it exists
if [ -f ".env" ]; then
    source .env
fi

get_chain_name() {
    local environment=$1
    local chain_type=$2

    # Validate inputs
    if [ -z "$environment" ] || [ -z "$chain_type" ]; then
        echo "Error: Both environment and chain type parameters are required" >&2
        exit 1
    fi

    # Validate environment parameter
    if [[ ! "$environment" =~ ^(testnode|testnet-dev|testnet-staging|testnet|mainnet)$ ]]; then
        echo "Error: Invalid environment. Must be one of: testnode, testnet-dev, testnet-staging, testnet, mainnet"
        exit 1
    fi

    # Validate chain type
    if [ "$chain_type" != "settlement-chain" ] && [ "$chain_type" != "app-chain" ]; then
        echo "Error: chain type must be either 'settlement-chain' or 'app-chain'" >&2
        exit 1
    fi

    if [ "$environment" = "testnode" ]; then
        if [ "$chain_type" = "settlement-chain" ]; then
            echo "l2_testnode"
        else
            echo "l3_testnode"
        fi
    elif [ "$environment" = "mainnet" ]; then
        if [ "$chain_type" = "settlement-chain" ]; then
            echo "base"
        else
            echo "xmtp"
        fi
    else
        if [ "$chain_type" = "settlement-chain" ]; then
            echo "base_sepolia"
        else
            echo "xmtp_ropsten"
        fi
    fi
}

get_environment_value() {
    local environment=$1
    local key=$2

    # Validate inputs
    if [ -z "$environment" ] || [ -z "$key" ]; then
        echo "Error: Both environment and key parameters are required" >&2
        exit 1
    fi

    config_file="./config/${environment}.json"
    if [ ! -f "$config_file" ]; then
        echo "Error: Environment file $config_file does not exist"
        exit 1
    fi

    local value=$(jq -r ".${key}" "$config_file")

    if [ "$value" = "null" ] || [ -z "$value" ]; then
        echo "Error: ${key} not found in ${config_file}"
        exit 1
    fi

    echo "$value"
}

get_verifier() {
    local explorer=$1

    if [ "$explorer" = "basescan" ]; then
        echo "etherscan"
    elif [ "$explorer" = "blockscout" ]; then
        echo "blockscout"
    elif [ "$explorer" = "alchemy" ]; then
        echo "blockscout"
    else
        echo "Error: explorer must be basescan, blockscout, or alchemy"
        exit 1
    fi
}

get_explorer_url() {
    local environment=$1
    local explorer=$2

    if [ "$explorer" = "basescan" ]; then
        if [ "$environment" = "mainnet" ]; then
            echo "https://api.basescan.org/api"
        else
            echo "https://api-sepolia.basescan.org/api"
        fi
    elif [ "$explorer" = "blockscout" ]; then
        if [ "$environment" = "mainnet" ]; then
            echo "https://base.blockscout.com/api/"
        else
            echo "https://base-sepolia.blockscout.com/api/"
        fi
    elif [ "$explorer" = "alchemy" ]; then
        if [ "$environment" = "mainnet" ]; then
            echo "https://xmtp.explorer.alchemy.com/api/"
        else
            echo "https://xmtp-ropsten.explorer.alchemy.com/api/"
        fi
    else
        echo "Error: explorer must be basescan, blockscout, or alchemy"
        exit 1
    fi
}

get_api_key() {
    local explorer=$1

    if [ "$explorer" = "basescan" ]; then
        echo $BASESCAN_API_KEY
    elif [ "$explorer" = "blockscout" ]; then
        echo $BLOCKSCOUT_API_KEY
    elif [ "$explorer" = "alchemy" ]; then
        echo ""
    else
        echo "Error: explorer must be basescan, blockscout, or alchemy"
        exit 1
    fi
}
