#!/bin/bash
set -euo pipefail

source "$(dirname "$0")/utils"

# Check if both arguments are provided
if [ $# -ne 1 ]; then
    echo "Usage: $0 <chain-name>"
    echo "chain-name: The chain to deploy to (e.g. base_sepolia, base_mainnet, xmtp_sepolia, xmtp_mainnet)"
    exit 1
fi

CHAIN_NAME=$1

# Validate chain name
if [[ ! "$CHAIN_NAME" =~ ^(base_sepolia|base_mainnet|xmtp_sepolia|xmtp_mainnet)$ ]]; then
    echo "Error: Invalid chain name. Must be one of: base_sepolia, base_mainnet, xmtp_sepolia, xmtp_mainnet"
    exit 1
fi

# Determine the deployment function based on chain type
if [ "$CHAIN_NAME" = "base_sepolia" ] || [ "$CHAIN_NAME" = "base_mainnet" ]; then
    DEPLOY_FUNC="deployBaseSettlementChainComponents()"
else
    DEPLOY_FUNC="deployBaseAppChainComponents()"
fi

# Determine the environment based on chain name
if [ "$CHAIN_NAME" = "base_sepolia" ] || [ "$CHAIN_NAME" = "xmtp_sepolia" ]; then
    ENVIRONMENT="testnet-dev" # testnet-dev should be the first testnet environment to exist
else
    ENVIRONMENT="mainnet"
fi

echo "⧖ Deploying base contracts on $CHAIN_NAME."

ENVIRONMENT=$ENVIRONMENT forge script script/Deploy.s.sol:DeployScripts --rpc-url "$CHAIN_NAME" --broadcast --slow --sig "$DEPLOY_FUNC"

echo "✔ Done deploying base contracts on $CHAIN_NAME."
